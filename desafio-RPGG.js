// nivel 1
let nome = "Clarisse";
let classe = "Guerreira";
let nivel = 18;
let vida = 100;
let ouro = 50;
let xp = 82;

console.log(`Ol√°! meu nome √© ${nome}, da classe ${classe}, meu pai √© o deus grego da guerra, o Ares, conhecido por sua brutalidade e 
sede de batalha.`);
console.log(
  `meu n√≠vel √© ${nivel}, tenho ${vida} de vida, ${ouro} de ouro e ${xp} de XP.`
);

const NOME_ARMA = "Lan√ßa el√©trica";
let danoBase = 92;
const NOME_ARMADURA = "Ferro celestial";
const DEFESA_BASE = 90;

console.log(`Tenho uma das armas mais poderosas e raras que um guerreiro poderia ter, uma ${NOME_ARMA} que ganhei do meu pai, ela tem  
a capacidade de manipular eletricidade para paralisar meus oponentes. `);
console.log(`O dano base da minha lan√ßa √© ${danoBase},`);
console.log(`Minha armadura √© de ${NOME_ARMADURA}`);
console.log(`E de defesa base ${DEFESA_BASE}`);

vida -= 40;
xp += 150;
ouro += 30;
vida += 40;
danoBase *= 2;

console.log(`Todo dia tenho um treinamento diferente, hoje tive que ca√ßar animais grandes, consegui um javali e um lobo, n√£o √© muita coisa 
    mas vale. Com o treinamento ganhei ${xp} de experi√™ncia.`);
console.log(`Durante o treinamento acabei me machucando, mas nada s√©rio, uma guerreira nunca cai, ent√£o comprei uma po√ß√£o na caverna do 
    mago na floresta das sombras para ajudar a me recuperar, e agora estou com 
${ouro} de ouro`);
console.log(
  `Com a po√ß√£o consegui me recuperar e agora estou com incr√≠veis ${vida} de vida!`
);
console.log(`Com os treinamentos minha lan√ßa acabou desgastando a ponta, o que atrapalha na a√ß√£o de seus poderes, ent√£o precisa ser afiada,
     consegui um encanto quando fui comprar a po√ß√£o, para dobrar o dano da minha
arma, que agora √© ${danoBase}`);

let ataqueTotal = nivel + danoBase;
let defesaTotal = danoBase + nivel / 2;

console.log(
  `Depois do treino, po√ß√£o e encanto estou com ${ataqueTotal} de ataque total e ${defesaTotal} de defesa total`
);

let vidaSuficiente = vida > 70;
let ataqueForte = ataqueTotal > 60;
let nivelAvancado = nivel >= 10;
let podeEnfrentarGuardiao = vidaSuficiente && (ataqueForte || nivelAvancado);

console.log(`Agora paro e penso "tenho vida suficiente?" ${vidaSuficiente}, "tenho ataque forte?" ${ataqueForte}, "n√≠vel avan√ßado?" 
    ${nivelAvancado}, "posso enfrentar o guardi√£o? ${podeEnfrentarGuardiao}. Agora que
estou pronta, vou em busca da minha primeira miss√£o, gosto de chamar de guerra!. Vou atr√°s da terra dos cristais onde est√° os cristais 
que foram roubados do meu pai. `);

// nivel 2
let vidaMaxima = 100;
let manaAtual = 70;
let manaMaxima = 100;

// Novos atributos para batalha
let forca = 95; //maximo 100;
let defesa = 95; //maximo 100;
let agilidade = 75; //maximo 100;
let combatesVencidos = 93; //maximo 100;

// Estado atual da historia
let localAtual = "Terra dos cristais";
let missaoAtual = "Recuperar os cristais roubados";

console.log(`üåÖ Pr√≥logo: Depois do meu treinamento, fui chamada pelo meu pai para a minha primeira guerra!, ${missaoAtual} na 
    ${localAtual} que √© onde cheguei agora.`);

// Cap√≠tulo 1: condicionais simples na narrativa
console.log("üåÖ CAP√çTULO 1: O Aviso dos Moradores");

//Verifica√ß√£o baseada no n√≠vel do personagem
if (nivel < 70) {
  console.log(
    "‚ö†Ô∏è Um morador da aldeia dos rejeitados que fica ao lado da Terra dos Cristais adverte: 'Voc√™ √© muito jovem para uma miss√£o t√£o importante, todos n√≥s que tentamos recuperar nossos cristais roubados fomos expulsos e estamos condenados a morte!, n√£o v√°.'"
  );
  console.log("Mas decido prosseguir mesmo assim...");
}

// Verifica√ß√£o de recursos especiais
if (ouro >= 100) {
  console.log(
    "üí∞ Minhas moedas se movem junto comigo ao caminhar fazendo um barulho de sino para avisando a todos que est√£o l√°... "
  );
}

// Verifica√ß√£o de classe espec√≠fica
if (classe === "Guerreira") {
  console.log(
    "‚öîÔ∏è O esp√≠rito de guerreira herdado pelo meu pai corre em mim... "
  );
}

// Cap√≠tulo 2: Escolha Estrat√©gica
console.log("üõ°Ô∏è CAP√çTULO 2: Caminhando para a guerra");

// Escolha baseada em recursos
if (ouro >= 50) {
  console.log(
    "üß™ Com uma quantidade boa de ouro compro mais po√ß√µes com os moradores da aldeia para me ajudar na miss√£o!"
  );
  forca += 7;
  defesa += 10;
  ouro -= 30;
  console.log("Minha for√ßa e defesa aumentaram! Ouro: " + ouro);
} else {
  console.log("üí∞ N√£o h√° ouro suficiente, devo ent√£o seguir como estou! ");
  console.log("Agilidade +5");
  agilidade += 5;
}

// Sistema de recompensas narrativo
if (xp >= 100) {
  console.log("Estou melhorando cada vez mais!");
  nivel++;
  xp = 0;
  vida = vidaMaxima;
} else {
  console.loog("Estou tentando melhorar cada vez mais...");
  console.log("XP: " + xp + "/100");
}

// CAP√çTULO 3: A Batalha Decisiva
console.log("‚öîÔ∏è CAP√çTULO 3: A luta ");
let poderInimigo = 30;

console.log(
  "Chego a Terra dos Cristais e me deparo com o Guardi√£o, ele j√° estava a minha espera, sem falar muito j√° come√ßo uma luta, eu preciso dos cristais!"
);

// Sistema de combate inteligente baseado na situa√ß√£o
if (vida <= 20) {
  console.log("üÜò Estou com pouca vida!, vou usar tudo o que tenho");
  console.log("Ataque final com toda a minha for√ßa!");
  poderInimigo -= forca * 2;
} else if (manaAtual >= 30 && classe === "guerreira") {
  console.log("Uso toda a minha for√ßa de guerreiro com ajuda da minha lan√ßa!");
  console.log("Lance eletrizante!");
  poderInimigo -= forca + 20;
  manaAtual -= 30;
} else if (agilidade >= 20) {
  console.log("üèÉ‚Äç‚ôÇÔ∏è De forma agil fa√ßo um ataque preciso!");
  poderInimigo -= forca;
} else {
  console.log("üõ°Ô∏è Luta defensiva e bem pensada!");
  poderInimigo -= forca / 2;
  vida += 10; // Recupera um pouco de vida
}

console.log("üìú === Cntinua√ß√£o da minha jornada ===");
console.log(
  "Ven√ßo o Guardi√£o, e entro na Terra dos cristais, correndo em dire√ß√£o ao castelo, onde fica todos os cristais roubados pelo mago verde."
);

// PR√ìLOGO - Conex√£o com o N√≠vel 1
console.log("Ap√≥s a luta para entrar na " + localAtual + ", eu");
console.log("da classe " + classe + " me deparo com o mago...");
console.log(
  "Ele me olha com cara de √≥dio mortal enquanto segura uma varinha m√°gica em suas m√£os, aponta ela para mim e lan√ßa um feiti√ßo, mas esque√ße que estou com uma armadura encantada, ela me proteje contra feiti√ßos. Pego minha lan√ßa e corro em dire√ß√£o a ele, o acerto no peito, como treinei a vida toda, ele cai e o ba√∫ atr√°s dele se abre e l√° est√£o os cristais! "
);

// [Aqui voc√™ implementa os 3 cap√≠tulos com os conceitos das etapas anteriores]

// EP√çLOGO - Resultado final
if (poderInimigo <= 0) {
  console.log("üéâ VIT√ìRIA MAGN√çFICA! " + nome + " REINA!");
  xp += 100;
  combatesVencidos++;
  console.log("A hist√≥ria de " + nome + " s√≥ cresce...");
} else {
  console.log(
    "‚öîÔ∏è A miss√£o foi dificil, mas como filha de Ares" +
      nome +
      " sobrevive para gerrear novamente!"
  );
}

console.log("üèÅ FIM DO CAP√çTULO - Aguarde o pr√≥ximo n√≠vel da aventura!");


//nivel 3
// === NOVOS ELEMENTOS PARA O CASTELO DOS CRISTAIS ===
let inventario = ["Po√ß√£o de Vida", "Lan√ßa el√©trica", "Armadura de ferro celestial"];
let aliados = ["Luke", "Maga suprema", "Annabeth Chase"];
let inimigosEncontrados = ["Mago terminal", "arqueiro jasmin"];
let salasCastelo = ["Sala dos cristais", "biblioteca", "Torre do mago"];
let tesouroColetado = [];

console.log("üè∞ === ADENTRO O CASTELO DOS ARRAYS ===");
console.log("Ap√≥s as vit√≥rias dos n√≠veis anteriores, chego ao castelo lend√°rio...");
console.log("Invent√°rio inicial: " + inventario.length + " itens m√°gicos");

// === CAP√çTULO 1: DESCOBERTA DAS COLE√á√ïES ARCANAS ===
console.log("");
console.log("üóùÔ∏è CAP√çTULO 1: Os Ba√∫s Arcanos do Castelo");

// 3.5.1. Declara√ß√£o e inicializa√ß√£o
let pocoesEncontradas = ["Cura total", "For√ßa bruta", "teletransporte"];
let armadilhasAtiradas = []; // Array vazio - ser√° preenchido na aventura

// 3.5.2. Acesso e modifica√ß√£o de elementos
console.log("üß™ Primeira po√ß√£o encontrada: " + pocoesEncontradas[0]);
console.log("‚öóÔ∏è Total de po√ß√µes m√°gicas: " + pocoesEncontradas.length);

// Modificando elemento espec√≠fico
inventario[0] = "Po√ß√£o de Vida Suprema"; // Upgrade da po√ß√£o!
console.log("‚ú® aprimoro uma po√ß√£o!");

// 3.5.3. M√©todos de array fundamentais
inventario.push("Anel de Prote√ß√£o"); // Adiciona no final
console.log("üíç Novo item adicionado! Invent√°rio: " + inventario);

let itemRemovido = inventario.pop(); // Remove do final
console.log("üì§ Item removido: " + itemRemovido);
console.log("üéí Invent√°rio atual: " + inventario);

// === CAP√çTULO 2: O RITUAL DA EXPLORA√á√ÉO ===
console.log("");
console.log("‚öîÔ∏è CAP√çTULO 2: Explorando as Masmorras de cristais");

// Explorando cada sala do castelo usando for tradicional
console.log("üó∫Ô∏è Come√ßando explora√ß√£o das " + salasCastelo.length + " salas m√≠sticas...");

for (let i = 0; i < salasCastelo.length; i++) {
console.log("üö™ Sala " + (i + 1) + ": " + salasCastelo[i]);

// L√≥gica diferente para cada sala baseada no √≠ndice
if (i === 0) {
console.log("üìö encontro pergaminhos antigos!");
xp += 50;
} else if (i === 1) {
console.log("üíé Cristais brilhantes concedem um poder m√°gico inemagin√°vel!");
tesouroColetado.push("Cristal de Poder");
} else {
console.log("‚è∞ O tempo muda ao redor de de mim!");
vida -= 10; // Pequeno dano temporal
}
}

console.log("üìä Explora√ß√£o completa! XP: " + xp + " | Vida: " + vida);

// === CAP√çTULO 3: A UNI√ÉO DOS ALIADOS ===
console.log("");
console.log("ü§ù CAP√çTULO 3: Reunindo os Aliados Arcanos");

// Recrutando aliados com for tradicional
console.log("üèπ convoco meus aliados para a luta final:");

for (let i = 0; i < aliados.length; i++) {
let aliado = aliados[i];
console.log("‚ö° Aliado " + (i + 1) + ": " + aliado + " se junta √† miss√£o!");

// Cada posi√ß√£o no array determina habilidade especial
if (i === 0) { // Primeiro aliado - L√≠der m√°gico
console.log("üîÆ Como l√≠der m√°gico, " + aliado + " multiplica o poder da equipe!");
ouro += 50;
} else if (i === 1) { // Segundo aliado - Defensor
console.log("üõ°Ô∏è Como defensor principal, " + aliado + " fortalece a resist√™ncia!");
vidaMaxima += 30;
} else { // Demais aliados - Especialistas
console.log("üèπ Como especialista, " + aliado + " aprimora t√°ticas de combate!");
xp += 40;
}
}

console.log("üéñÔ∏è Equipe completa! Ouro: " + ouro + " | Vida m√°xima: " + vidaMaxima);

// === CAP√çTULO 4: A BATALHA FINAL DOS ARRAYS ===
console.log("");
console.log("üêâ CAP√çTULO 4: Confronto com as Criaturas do Castelo");

// Sistema de batalha usando arrays e for tradicional
let inimigosBatalha = ["Guardi√£o dos Cristal", "Senhor dos baus", "Drag√£o das masmorras"];
let danoRecebido = [];

console.log("üíÄ " + nome + " enfrenta " + inimigosBatalha.length + " inimigos √©picos!");

// Batalha usando for tradicional para controle preciso
for (let i = 0; i < inimigosBatalha.length; i++) {
let inimigo = inimigosBatalha[i];
let dano = Math.floor(Math.random() * 30) + 10; // Dano entre 10 e 39

console.log("‚öîÔ∏è Rodada " + (i + 1) + " - Enfrentando: " + inimigo);
console.log("üí• " + nome + " causa " + dano + " de dano!");

danoRecebido.push(dano); // Armazena dano para c√°lculos posteriores

// L√≥gica especial para cada rodada baseada no √≠ndice
if (i === 0) {
console.log("üíé Primeira vit√≥ria! Cristais fragmentados concedem b√¥nus!");
tesouroColetado.push("Fragmento de Cristal");
} else if (i === 1) {
console.log("üåë Segunda batalha! As sombras drenam energia, mas resisto!");
vida -= 15;
} else {
console.log("üî• Batalha final! O drag√£o recua! Vit√≥ria √©pica alcan√ßada!");
xp += 100;
tesouroColetado.push("Escama Drag√¥nica");
}
}

// Calculando estat√≠sticas da batalha usando for tradicional
let danoTotal = 0;
for (let i = 0; i < danoRecebido.length; i++) {
danoTotal += danoRecebido[i];
console.log("üìä Rodada " + (i + 1) + " - Dano: " + danoRecebido[i]);
}

console.log("‚ö° Dano total causado: " + danoTotal);
console.log("üèÜ Tesouros coletados: " + tesouroColetado.length + " itens √©picos!");

// === EP√çLOGO: O MESTRE DOS ARRAYS ===
console.log("");
console.log("üëë === EP√çLOGO: " + nome + " - CONQUISTADOR DO CASTELO ===");

// Estat√≠sticas finais da jornada
console.log("üìà Estat√≠sticas Finais da Aventura:");
console.log("‚Ä¢ N√≠vel alcan√ßado: " + nivel);
console.log("‚Ä¢ Experi√™ncia total: " + xp);
console.log("‚Ä¢ Vida restante: " + vida + "/" + vidaMaxima);
console.log("‚Ä¢ Ouro acumulado: " + ouro);
console.log("‚Ä¢ Itens no invent√°rio: " + inventario.length);
console.log("‚Ä¢ Aliados conquistados: " + aliados.length);
console.log("‚Ä¢ Tesouros √©picos: " + tesouroColetado.length);

// === 10 LINHAS √âPICAS DE CONTINUA√á√ÉO ===
console.log("");
console.log("üåü A LENDA CONTINUA...");
console.log("Ap√≥s conquistar o Castelo dos cristais, emergo transformado.");
console.log("Vejo o sol amarelo novamente, e sinto a brisa do vento");
console.log("Respiro aliviada pela vit√≥ria e sigo em dire√ß√£o a minha cidade");
console.log("Passo pela a aldeia dos excluidos e sou recebida com festa de comemora√ß√£o pela minha vit√≥ria e liberta√ß√£o deles");
console.log("Depois de aproveitar a festa vou embora com meus aliados");
console.log("Chegamos em nossa cidade e n√£o vemos ningu√©m, s√≥ o barulho das √°rvores balan√ßando com o vento");
console.log("Casas destruidas e pessoas desaparecidas, o que aconteceu?");
console.log("E percebemos que temos mais um problema para resolver, um beb√™ sozinho chorando, porque s√≥ ele ficou?")
console.log("Nossa miss√£o n√£o acaba aqui!")

console.log("");
console.log("üéØ FIM DO N√çVEL 3 | AGUARDE FUTURAS AVENTURAS NA ACADEMIA DOS C√ìDIGOS! üéØ");

// EXEMPLO DE DESAFIO EXTRA: Sistema de Raridade
let itensRaros = [];
let itensComuns = [];
                        
// Classificando itens por raridade usando loops cl√°ssicos
for (let i = 0; i < inventario.length; i++) {
        let item = inventario[i];
                            
if (item.includes("Suprema") || item.includes("Flamejante")) {
        itensRaros.push(item);
    } else {
        itensComuns.push(item);
    }
}
                        
console.log("üíé Itens Raros: " + itensRaros);
console.log("üîß Itens Comuns: " + itensComuns);
                        